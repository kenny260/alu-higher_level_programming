#!/usr/bin/python3
"""
This module defines a BaseGeometry class.
"""

class BaseGeometry:
    """
    A base class for geometric shapes.
    Provides basic functionality like area calculation and integer validation.
    """

    def area(self):
        """
        Calculates the area of the geometry.
        This method is not implemented in the base class and should be
        overridden by subclasses.

        Raises:
            Exception: Always raises an exception with the message
                       "area() is not implemented".
        """
        raise Exception("area() is not implemented")

    def integer_validator(self, name, value):
        """
        Validates if a value is an integer and greater than 0.

        Args:
            name (str): The name of the value (e.g., "width", "height").
            value (int): The value to be validated.

        Raises:
            TypeError: If `value` is not an integer.
            ValueError: If `value` is less than or equal to 0.
        """
        if not isinstance(value, int):
            raise TypeError(f"{name} must be an integer")
        if value <= 0:
            raise ValueError(f"{name} must be greater than 0")


